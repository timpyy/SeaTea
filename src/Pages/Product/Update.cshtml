@page "{id}"
@using ContosoCrafts.WebSite.Services
@inject JsonFileProductService ProductService
@model ContosoCrafts.WebSite.Pages.Product.UpdateModel

@{
    ViewData["Title"] = "Update page";
}


<div class="container">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @Html.HiddenFor(x => x.Product.Id)

        <div class="form-group">
            <label asp-for="Product.Title" class="control-label"> Store Name </label>
            <input asp-for="Product.Title" class="form-control" type="text" required/>
            <span asp-validation-for="Product.Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Description" class="control-label"> Store Address </label>
            <input asp-for="Product.Description" class="form-control" type="text" required/>
            <span asp-validation-for="Product.Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Neighborhood" class="control-label">Filter by Neighborhood</label>
            <select asp-for="Product.Neighborhood" class="form-control" onchange="UpdateNeighborhoodFilterText(this.value)">
                 <option value="Other">Other</option>
                 <option value="University District">University District</option>
                 <option value="International District">International District</option>
                 <option value="South Lake Union">South Lake Union</option>
                 <option value="West Lake">West Lake</option>
                 <option value="Queen Anne">Queen Anne</option>
                 <option value="Capitol Hill">Capitol Hill</option>
                 <option value="Fremont">Fremont</option>
            </select>
            <span asp-validation-for="Product.Neighborhood" class="text-danger"></span>
        </div>

        <div class="form-group">

            <label asp-for="Product.Url" class="control-label"> Store URL </label>
            <input asp-for="Product.Url" class="form-control" type="url" required/>
            <span asp-validation-for="Product.Url" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Image" class="control-label">Store Image URL</label>
            <input asp-for="Product.Image" class="form-control" type="url" required/>
            <span asp-validation-for="Product.Image" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.Phone" class="control-label">Store Phone Number</label>
            <input asp-for="Product.Phone" class="form-control" type="text"/>
            <span asp-validation-for="Product.Phone" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Product.OnlineMenuLink" class="control-label">Store Online Menu URL</label>
            <input asp-for="Product.OnlineMenuLink" class="form-control" type="url" />
            <span asp-validation-for="Product.OnlineMenuLink" class="text-danger"></span>
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </form>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        var inputImage = document.getElementById('Product_Image');

        inputImage.addEventListener('change', function () {
            var imageUrl = inputImage.value;

            var internetConnectionRequest = new XMLHttpRequest();
            internetConnectionRequest.open('HEAD', imageUrl, true);
            internetConnectionRequest.onreadystatechange = function () {
                // Http fetch request was successful
                if (internetConnectionRequest.readyState === 4) {
                    // Request successfully reached the webpage
                    if (internetConnectionRequest.status === 200) {
                        // Read the headers of the http connection
                        var contentType = internetConnectionRequest.getResponseHeader('Content-Type');
                        // Ensures that 'image' is a subtype of the returned message
                        if (contentType.indexOf('image') === 0) {
                            // Valid image URL reached
                        } else {
                            // URL does not have an image header in the HTTP request
                            alert('The URL provided is not an image.');
                            inputImage.value = '';
                        }
                    } else {
                        // Internet connection may of caused the validation to fail
                        alert('Failed to load the URL.');
                        inputImage.value = '';
                    }
                }
            };
            internetConnectionRequest.send();
        });
    </script>
}
